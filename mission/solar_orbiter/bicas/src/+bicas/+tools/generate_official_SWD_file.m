%
% Automatically generate the OFFICIAL descriptor.json SWD file (as mandated by
% RCS ICD). This function is useful for quickly updating the SWD file before
% officially delivering a new version of BICAS to ROC.
%
% NOTES
% =====
% * Uses BICAS DEFAULT settings which is what BICAS running at ROC should use
%   (except for specifying MATLAB executable). Therefore does not need to
%   explicitly disable unofficial SWMs (settings SWM.L1-L2_ENABLED,
%   SWM.L2-L2_CWF-DSR_ENABLED, SWM.L2-L3_ENABLED).
% * bicas.tools.generate_official_SWD_file___UTEST tests (among other
%   things) that the SWD file is equal to the file generated by this code. If
%   that particular test fails, then this function can be used (without
%   arguments) to correct the SWD file.
% * The SWD file should ideally also be validated against the RCS ICD SWD
%   validation schema, though that seems to not be truly necessary, unless the
%   RCS ICD changes w.r.t. to the SWD.
% * This function makes the unofficial BICAS CLI option "--swdescriptor" less
%   important, but not completely important since it can still be used to easily
%   see the supported SWMs and skeleton versions, also for unofficial SWMs.
%
%
% ARGUMENTS
% =========
% filePath
%       Optional. If not specified, use <BICAS root dir.>/descriptor.json .
%
%
% Author: Erik P G Johansson, IRF, Uppsala, Sweden
%
function generate_official_SWD_file(filePath)

% Normalize filePath
if nargin == 0
  filePath = bicas.utils.get_SWD_file();
end

Bso = bicas.create_default_BSO();
Bso.make_read_only();

Swml    = bicas.swm.get_SWML(Bso);
JsonSwd = bicas.get_SWD(Swml.List);
strSwd  = bicas.utils.JSON_object_str(JsonSwd);

irf.fs.write_file(filePath, uint8(strSwd(:)))
end
