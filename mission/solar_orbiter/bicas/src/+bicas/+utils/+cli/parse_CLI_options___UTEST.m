%
% matlab.unittest automatic test code for bicas.utils.cli.parse_CLI_options().
%
%
% Author: Erik P G Johansson, IRF, Uppsala, Sweden
% First created 2021-09-10
%
classdef parse_CLI_options___UTEST < matlab.unittest.TestCase



  %##############
  %##############
  % TEST METHODS
  %##############
  %##############
  methods(Test)



    function test0(testCase)

      % NOTE: Arguments CopcArray, inputStr switch places to make
      %       the test code look better.
      function test(CopcArray, inputStr, outputMapKeys, outputMapValues)
        cliArgumentsCa = strsplit(inputStr)';

        ExpCopvMap = containers.Map(outputMapKeys, outputMapValues);

        ActCopvMap = bicas.utils.cli.parse_CLI_options(...
          cliArgumentsCa, CopcArray);

        testCase.assertEqual(ActCopvMap, ExpCopvMap)
      end



      % NOTE: Arguments OptionsConfigMap, inputStr switch places to make
      %       test code look better.
      function test_exc(CopcArray, inputStr)
        cliArgumentsCa = strsplit(inputStr)';

        assert(isa(CopcArray, 'bicas.utils.cli.OptionConfig'))
        assert(iscolumn(CopcArray))

        testCase.assertError(...
          @() bicas.utils.cli.parse_CLI_options(...
          cliArgumentsCa, CopcArray), ...
          ?MException)
      end

      %===================================================================
      import bicas.utils.cli.OptionConfig
      import bicas.utils.cli.OptionValue



      % OCM = Options Config Map
      COPC_ARRAY_1 = [...
        OptionConfig('a', '-a', '0-1',   0, 0); ...
        OptionConfig('b', '-b', '1',     1, 0); ...
        OptionConfig('c', '-c', '0-inf', 2, 0)...
        ];
      COPC_ARRAY_2 = [...
        OptionConfig('--', '--.*', '0-1',   0, 0); ...
        OptionConfig('==', '==.*', '0-inf', 0, 0) ...
        ];
      COPC_ARRAY_3 = [...
        OptionConfig('all', '--.*',    '0-inf', 1, -1); ...
        OptionConfig('log', '--log',   '1',     1,  0); ...
        OptionConfig('set', '--set.*', '0-inf', 1,  0) ...
        ];

      COPV_0x1 = bicas.utils.cli.OptionValue.empty(0, 1);



      % Missing option -b.
      test_exc(COPC_ARRAY_1, '-a')



      % Same COPC array, different argument lists.
      test(COPC_ARRAY_1,    '-b 123',        {'a', 'b', 'c'}, {COPV_0x1,                        OptionValue(1, '-b', {'123'}), COPV_0x1});
      test(COPC_ARRAY_1, '-a -b 123',        {'a', 'b', 'c'}, {OptionValue(1, '-a', cell(0,1)), OptionValue(2, '-b', {'123'}), COPV_0x1});
      test(COPC_ARRAY_1, '-a -b 123 -c 8 9', {'a', 'b', 'c'}, {OptionValue(1, '-a', cell(0,1)), OptionValue(2, '-b', {'123'}), OptionValue(4, '-c', {'8'; '9'})});



      % Test multiple occurrences of the same option.
      test(COPC_ARRAY_1, '-c 6 7 -a -b 123 -c 8 9', ...
        {'a', 'b', 'c'}, ...
        { ...
        OptionValue(4, '-a', cell(0,1)), ...
        OptionValue(5, '-b', {'123'}), ...
        [ ...
        OptionValue(1, '-c', {'6'; '7'}), ...
        OptionValue(7, '-c', {'8'; '9'}) ...
        ] ...
        } ...
        );
      % Test multiple occurrences of the same option.
      test(COPC_ARRAY_1, '-c 6 7 -b 123 -c 8 9', ...
        {'a', 'b', 'c'}, ...
        { ...
        COPV_0x1, ...
        OptionValue(4, '-b', {'123'}), ...
        [ ...
        OptionValue(1, '-c', {'6'; '7'}), ...
        OptionValue(6, '-c', {'8'; '9'})...
        ] ...
        } ...
        );

      test(COPC_ARRAY_2, '--ASD',           {'--', '=='}, ...
        { ...
        OptionValue(1, '--ASD', cell(0,1)), ...
        COPV_0x1 ...
        });
      test(COPC_ARRAY_2, '==ASD ==a --abc', {'--', '=='}, ...
        { ...
        OptionValue(3, '--abc', cell(0,1)), ...
        [ ...
        OptionValue(1, '==ASD', cell(0,1)), ...
        OptionValue(2, '==a',   cell(0,1))...
        ] ...
        } ...
        );



      test(COPC_ARRAY_3, '--input1 i1 --output1 o1 --log logfile', ...
        {'all', 'log', 'set'}, ...
        { ...
        [ ...
        OptionValue(1, '--input1',  {'i1'}), ...
        OptionValue(3, '--output1', {'o1'})...
        ], ...
        OptionValue(5, '--log',     {'logfile'}), ...
        COPV_0x1 ...
        } ...
        );

      test(COPC_ARRAY_3, '--input1 i1 --output1 o1 --log logfile --setDEBUG ON', ...
        {'all', 'log', 'set'}, ...
        { ...
        [ ...
        OptionValue(1, '--input1',   {'i1'}), ...
        OptionValue(3, '--output1',  {'o1'})...
        ], ...
        OptionValue(5, '--log',      {'logfile'}), ...
        OptionValue(7, '--setDEBUG', {'ON'}) ...
        } ...
        );

    end



  end    % methods(Test)



end
