%
% Execute a "S/W mode" as (indirectly) specified by the CLI arguments. This
% function should be agnostic of CLI syntax.
%
%
% ARGUMENTS AND RETURN VALUES
% ===========================
% SwmInfo
% InputFilePathMap  : containers.Map with
%    key   = PFIID
%    value = Path to input file
% OutputFilePathMap : containers.Map with
%    key   = PFOID
%    value = Path to output file
%
%
% "BUGS"
% ======
% - Sets GlobalAttributes.Generation_date in local time (no fixed time zone,
%   e.g. UTC+0).
%
%
% Author: Erik P G Johansson, IRF, Uppsala, Sweden
% First created 2016-06-09
%
function execute_SWM(...
  SwmInfo, InputFilePathMap, OutputFilePathMap, ...
  masterCdfDir, rctDir, NsoTable, Bso, L)

% TODO-NI: How verify dataset ID and dataset version against constants?
%    NOTE: Need to read CDF first.
%    NOTE: Need S/W mode.
%
% PROPOSAL: Verify output zVariables against master CDF zVariable dimensions
%           (accessible with dataobj, even for zero records).
%   PROPOSAL: function matchesMaster(DataObj, MasterDataobj)
%       PRO: Want to use dataobj to avoid reading file (input dataset) twice.
%
% PROPOSAL: Print variable statistics also for zVariables which are created with fill values.
%   NOTE: These do not use NaN, but fill values.



% ASSERTION: Check that all input & output dataset paths (strings) are
% unique.
% NOTE: Manually entering CLI argument, or copy-pasting BICAS call, can
% easily lead to reusing the same path by mistake, and e.g. overwriting an
% input file.
datasetFileCa = [InputFilePathMap.values(), OutputFilePathMap.values()];
assert(numel(unique(datasetFileCa)) == numel(datasetFileCa), ...
  'BICAS:CLISyntax', ...
  ['Input and output dataset paths are not all unique.', ...
  ' This hints of a manual mistake', ...
  ' in the CLI arguments in the call to BICAS.'])



%=============================
% READ CDFs
% ---------
% Iterate over all INPUT CDFs
%=============================
InputDatasetsMap = containers.Map();
for i = 1:length(SwmInfo.inputsList)
  pfiid         = SwmInfo.inputsList(i).pfiid;
  inputFilePath = InputFilePathMap(pfiid);

  %=======================
  % Read dataset CDF file
  %=======================
  InputDataset = bicas.read_dataset_CDF(inputFilePath, Bso, L);

  InputDatasetsMap(pfiid) = InputDataset;



  %============================================
  % ASSERTIONS: Check global attributes values
  %============================================
  % NOTE: Can not use
  % bicas.proc.utils.assert_struct_num_fields_have_same_N_rows(Zv) since
  % not all zVariables have same number of records.
  % Ex: Metadata such as ACQUISITION_TIME_UNITS.
  if ~isfield(InputDataset.Ga, 'Dataset_ID')
    error('BICAS:Assertion:DatasetFormat', ...
      ['Input dataset does not contain (any accepted variation', ...
      ' of) the global attribute Dataset_ID.\n    File: "%s"'], ...
      inputFilePath)
  end
  cdfDsi = InputDataset.Ga.Dataset_ID{1};

  if ~strcmp(cdfDsi, SwmInfo.inputsList(i).dsi)
    [settingValue, settingKey] = Bso.get_fv(...
      'INPUT_CDF.GA_DSI_MISMATCH_POLICY');
    anomalyDescrMsg = sprintf(...
      ['The input CDF dataset''s stated DSI does', ...
      ' not match value expected from the S/W mode.\n', ...
      '    File: %s\n', ...
      '    Global attribute InputDataset.Ga.Dataset_ID{1} : "%s"\n', ...
      '    Expected value:                                : "%s"\n'], ...
      inputFilePath, cdfDsi, SwmInfo.inputsList(i).dsi);
    bicas.default_anomaly_handling(L, ...
      settingValue, settingKey, ...
      'ERROR_WARNING_ILLEGAL_SETTING', anomalyDescrMsg, 'BICAS:DatasetFormat')
  end
end



%=======================================
% PROCESS DATA: CALL PRODUCTION FUNCTION
%=======================================
OutputDatasetsMap = SwmInfo.Swmp.production_function(InputDatasetsMap, rctDir, NsoTable, Bso, L);



%==============================
% WRITE CDFs
% ----------
% Iterate over all OUTPUT CDFs
%==============================
% ASSERTION: The output datasets generated by processing equal the datasets
% required by the s/w mode.
irf.assert.castring_sets_equal(...
  OutputDatasetsMap.keys, ...
  {SwmInfo.outputsList.pfoid});
%
for iOutputCdf = 1:length(SwmInfo.outputsList)
  SwmOutputDataset = SwmInfo.outputsList(iOutputCdf);

  pfoid            = SwmOutputDataset.pfoid;
  outputFilePath   = OutputFilePathMap(pfoid);



  %========================
  % Write dataset CDF file
  %========================
  masterCdfPath = fullfile(...
    masterCdfDir, ...
    bicas.get_master_CDF_filename(...
    SwmOutputDataset.dsi, ...
    SwmOutputDataset.skeletonVersion));

  OutputDataset = OutputDatasetsMap(SwmOutputDataset.pfoid);
  assert(isa(OutputDataset, 'bicas.OutputDataset'))

  ZvsSubset = OutputDataset.Zv;

  GaSubset = bicas.ga.get_output_dataset_GAs(...
    InputDatasetsMap, OutputDataset, ...
    irf.fs.get_name(outputFilePath), SwmOutputDataset.dsi, ...
    Bso, L);

  bicas.write_dataset_CDF( ...
    ZvsSubset, GaSubset, outputFilePath, masterCdfPath, ...
    Bso, L );
end



end   % execute_SWM
