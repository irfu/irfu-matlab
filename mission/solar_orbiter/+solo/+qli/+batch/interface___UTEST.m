%
% matlab.unittest automatic test code for solo.qli.batch.dasa.
%
%
% Author: Erik P G Johansson, IRF, Uppsala, Sweden
%
classdef interface___UTEST < matlab.unittest.TestCase



  %##############
  %##############
  % TEST METHODS
  %##############
  %##############
  methods(Test)



    function test_check_interface_date_str(testCase)
      solo.qli.batch.dasa.check_interface_date_str('2000-01-01')
      solo.qli.batch.dasa.check_interface_date_str('2099-12-31')

      testCase.assertError(...
        @() solo.qli.batch.dasa.check_interface_date_str('2020-01-01a'), ...
        ?MException)
      testCase.assertError(...
        @() solo.qli.batch.dasa.check_interface_date_str('a2020-01-01'), ...
        ?MException)
    end



    % function UmdDtArray = filter_days_array = filter_days_array(...
    %     UmdDtArray, maxNDaysStr, beginDayUtcInclStr, endDayUtcExclStr)
    function test_filter_days_array(testCase)

      function test(...
          DayStrCa, ExpDayStrCa, maxNDays, beginDayUtcInclStr, endDayUtcExclStr)

        ActUmdDtArray = solo.qli.batch.dasa.filter_days_array( ...
          irf.dt.um(DayStrCa), ...
          sprintf('%i', maxNDays), ...
          beginDayUtcInclStr, ...
          endDayUtcExclStr);

        testCase.assertEqual(ActUmdDtArray, irf.dt.um(ExpDayStrCa))
      end

      % Empty
      test( ...
        cell(0, 1), ...
        cell(0, 1), ...
        0, '2024-01-01', '2024-01-01')
      test( ...
        cell(0, 1), ...
        cell(0, 1), ...
        100, '2024-01-01', '2025-01-01')

      %======================
      % Filter time interval
      %======================
      % Overlap
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        {'2024-02-01'}, ...
        100, '2024-01-01', '2024-02-02')
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        {'2024-02-02'}, ...
        100, '2024-02-02', '2025-01-01')

      % All
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        {'2024-02-01'; '2024-02-02'}, ...
        100, '2024-01-01', '2025-01-01')
      % nothing
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        cell(0, 1), ...
        100, '2024-01-01', '2024-01-10')

      %======================
      % Filter by max number
      %======================
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        {'2024-02-01'}, ...
        1, '2024-01-01', '2025-01-01')
      test( ...
        {'2024-02-01'; '2024-02-02'}, ...
        cell(0, 1), ...
        0, '2024-01-01', '2025-01-01')


      % Filter by time interval and max number.
      % Test the order of filtering.
      test( ...
        {'2024-01-01'; '2024-01-02'; '2024-01-03'; '2024-01-04'}, ...
        {'2024-01-02'; '2024-01-03'}, ...
        2, '2024-01-02', '2024-01-04')
    end



  end    % methods(Test)



end
