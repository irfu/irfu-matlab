% IRF_INDENTATIONS ensures uniform 2 space indentations is used in all
% applicable irfu-matlab .m files as per our CONTRIBUTING.md guidelines
%
% 	IRF_INDENTATIONS opens and in applicable cases re-writes all files using
% 	Matlab's own smartIndentContents(). For this to work one should first
%   set appropriate "Tab size = 2" & "Indent size = 2" in the Matlab editor
% 	found under "Matlab" -> "Preferences" -> "Editor/Debugger" -> "Tab".
%
% Note: SolarOrbiter specific code ("mission/solo/") and externally
%       contributed code ("contrib/") is excluded from this 2 space
%       recommendation.
%
% 	See also smartIndentContents, <a href="matlab:web('https://github.com/irfu/irfu-matlab/blob/master/.github/CONTRIBUTING.md')">.github/CONTRIBUTING.md</a>

% Verify settings is two spaces and only two spaces (no tabs or more/less spaces)
s = settings;
if (s.matlab.editor.tab.IndentSize.ActiveValue ~= 2 || ...
    s.matlab.editor.tab.TabSize.ActiveValue ~= 2 || ...
    ~s.matlab.editor.tab.InsertSpaces.ActiveValue)
  logStr = 'Before running "irf_indentations", make sure your indentations are set to two (2) spaces and only spaces, no tabs.';
  irf.log('critical', logStr);
  error(logStr);
end

irfPath = irf('path'); % irf root path

% NOTE: Algorithm will only affect files directly under the listed directories,
% i.e. it will not modify files recursively.
irfDirectories = {...
  '.', ...  % irf root path
  '@dataobj', ...
  '+local', ...
  '+lp', ...
  '+maarble', ...
  '+model', ...
  '+whamp', ...
  'irf', ...
  fullfile('irf'    , '+irf'), ...
  fullfile('irf'    , '+irf', ''), ...
  fullfile('irf'    , '+irf', '+cdf'), ...
  fullfile('irf'    , '+irf', '+ds'), ...
  fullfile('irf'    , '+irf', '+fs'), ...
  fullfile('irf'    , '+irf', '+graph'), ...
  fullfile('irf'    , '+irf', '+str'), ...
  fullfile('irf'    , '+irf', '+utils'), ...
  fullfile('mission', 'cluster'), ...
  fullfile('mission', 'cluster', 'c_ri'), ...
  fullfile('mission', 'cluster', 'caa'), ...
  fullfile('mission', 'cluster', 'caa', '@ClusterDB'), ...
  fullfile('mission', 'cluster', 'caa', '@ClusterProc'), ...
  fullfile('mission', 'mms'), ...
  fullfile('mission', 'mms', '+mms'), ...
  fullfile('mission', 'mms', 'cal'), ...
  fullfile('mission', 'mms', 'mms_testFunctions'), ...
  fullfile('mission', 'rosetta'), ...
  fullfile('mission', 'solar_orbiter'), ...
  fullfile('mission', 'solar_orbiter', '+solo'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+BSACT_utils'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+adm'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+hwzv'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+qli'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+shk'), ...
  fullfile('mission', 'solar_orbiter', '+solo', '+sp'), ...
  fullfile('mission', 'themis'), ...
  fullfile('mission', 'thor'), ...
  fullfile('mission', 'thor', 'orbit_coverage'), ...
  fullfile('mission', 'thor', 'plots'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+gamods'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc', '+L1L2'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc', '+L1L2', '+cal'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc', '+L1L2', '+cal', '+rct'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc', '+L2L2'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+proc', '+L2L3'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+swm'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+tf'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+tools'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+tools', '+vbmc'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+utils'), ...
  fullfile('mission', 'solar_orbiter', 'bicas', 'src', '+bicas', '+vht'), ...
  'plots', ...
  fullfile('plots'  , 'mms'), ...
  fullfile('plots'  , 'solo')
  };

for iPath = 1:numel(irfDirectories)
  mDirPath = fullfile(irfPath, filesep, irfDirectories{iPath});

  % IMPLEMENTATION NOTE: Code (after assertion) does not fail for non-existing
  % directories. Therefore adding assertion to avoid mistakenly specifying
  % non-existing directory paths.
  assert(logical(exist(mDirPath, 'dir')), 'Directory mDirPath="%s" does not exist.', mDirPath)

  mFiles = dir(fullfile(mDirPath, '*.m'));
  for iFile = 1:length(mFiles)
    theDocument = matlab.desktop.editor.openDocument(fullfile(mFiles(iFile).folder, mFiles(iFile).name));
    smartIndentContents(theDocument);
    save(theDocument);
    close(theDocument);
  end
end

